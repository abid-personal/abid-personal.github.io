1:HL["/_next/static/media/7cba1811e3c25a15-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
2:HL["/_next/static/css/cd219d613ad8989f.css","style",{"crossOrigin":""}]
3:HL["/_next/static/css/959e61cd6bf7e234.css","style",{"crossOrigin":""}]
0:["Py0GnHVEtbE6txuAghHxJ",[[["",{"children":["(blog)",{"children":[["slug","rust-high-level-language","c"],{"children":["__PAGE__?{\"slug\":[\"rust-high-level-language\"]}",{}]}]}]},"$undefined","$undefined",true],"$L4",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/cd219d613ad8989f.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/959e61cd6bf7e234.css","precedence":"next","crossOrigin":""}]],"$L5"]]]]
6:HL["/_next/static/css/c1c99bc127b9f571.css","style",{"crossOrigin":""}]
7:I[4893,["326","static/chunks/326-f0b929b9e51900a5.js","185","static/chunks/app/layout-3c45d3b9abe07049.js"],"CSPostHogProvider"]
8:I[7821,["326","static/chunks/326-f0b929b9e51900a5.js","185","static/chunks/app/layout-3c45d3b9abe07049.js"],"ThemeProviders"]
9:I[8326,["326","static/chunks/326-f0b929b9e51900a5.js","202","static/chunks/app/(blog)/%5B...slug%5D/page-47a78e5a6d2fc851.js"],""]
a:I[5235,["326","static/chunks/326-f0b929b9e51900a5.js","185","static/chunks/app/layout-3c45d3b9abe07049.js"],""]
b:I[6954,[],""]
c:I[7264,[],""]
4:[null,["$","html",null,{"lang":"en-us","className":"__variable_bc0dcf scroll-smooth","suppressHydrationWarning":true,"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"76x76","href":"/favicon.svg"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon.svg"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon.svg"}],["$","link",null,{"rel":"manifest","href":"/static/favicons/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/favicon.svg","color":"#5bbad5"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: light)","content":"#fff"}],["$","meta",null,{"name":"theme-color","media":"(prefers-color-scheme: dark)","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}],["$","$L7",null,{"children":["$","body",null,{"className":"m-auto max-w-2xl dark:text-gray-100","children":["$","$L8",null,{"children":[["$","main",null,{"className":"min-h-screen p-6 pt-3 md:pt-6","children":[["$","header",null,{"className":"mb-5 flex items-center md:mb-10","children":[["$","span",null,{"className":"text-md whitespace-nowrap font-bold md:text-lg","children":["$","$L9",null,{"href":"/","className":"-ml-2 rounded-sm p-2 transition-[background-color] hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-[#313131] dark:active:bg-[#242424]","children":"Omar Abid"}]}],["$","nav",null,{"className":"flex grow items-center justify-end gap-1 font-mono text-xs md:gap-3","children":[["$","$La",null,{}],["$","a",null,{"className":"inline-flex rounded-sm p-2 transition-[background-color] hover:bg-gray-200 active:bg-gray-300 dark:hover:bg-[#313131] dark:active:bg-[#242424]","href":"/about","children":"About"}]]}]]}],["$","$Lb",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex flex-col items-start justify-start md:mt-24 md:flex-row md:items-center md:justify-center md:space-x-6","children":[["$","div",null,{"className":"space-x-2 pb-8 pt-6 md:space-y-5","children":["$","h1",null,{"className":"text-6xl font-extrabold leading-9 tracking-tight text-gray-900 dark:text-gray-100 md:border-r-2 md:px-6 md:text-8xl md:leading-14","children":"404"}]}],["$","div",null,{"className":"max-w-md","children":[["$","p",null,{"className":"mb-4 text-xl font-bold leading-normal md:text-2xl","children":"Sorry we couldn't find this page."}],["$","p",null,{"className":"mb-8","children":"But dont worry, you can find plenty of other things on our homepage."}],["$","$L9",null,{"href":"/","className":"focus:shadow-outline-blue inline rounded-lg border border-transparent bg-blue-600 px-4 py-2 text-sm font-medium leading-5 text-white shadow transition-colors duration-150 hover:bg-blue-700 focus:outline-none dark:hover:bg-blue-500","children":"Back to homepage"}]]}]]}],"notFoundStyles":[],"initialChildNode":["$","$Lb",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":["$","$Lb",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children",["slug","rust-high-level-language","c"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":["$Ld","$Le",null],"childPropSegment":"__PAGE__?{\"slug\":[\"rust-high-level-language\"]}","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c1c99bc127b9f571.css","precedence":"next","crossOrigin":""}]]}],"childPropSegment":["slug","rust-high-level-language","c"],"styles":null}],"childPropSegment":"(blog)","styles":null}]]}],["$","footer",null,{"className":"mt-3 flex p-6 pb-6 pt-3 text-center font-mono text-xs text-gray-500 dark:text-gray-400","children":[["$","div",null,{"className":"grow text-left","children":["Omar Abid (",["$","a",null,{"className":"border-b border-gray-300 text-gray-600 transition-[border-color] hover:border-gray-600 dark:border-gray-500 dark:text-white dark:hover:border-white ","target":"_blank","href":"https://github.com/omarabid","children":"@omarabid"}],")"]}],["$","div",null,{}]]}]]}]}]}]]}],null]
5:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Rust as a productive high-level language | Omar Abid - Personal Blog"}],["$","meta","3",{"name":"description","content":"High-level productivity with Rust"}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","link","6",{"rel":"canonical","href":"https://omarabid.com/rust-high-level-language"}],["$","link","7",{"rel":"alternate","type":"application/rss+xml","href":"https://omarabid.com/feed.xml"}],["$","meta","8",{"property":"og:title","content":"Rust as a productive high-level language"}],["$","meta","9",{"property":"og:description","content":"High-level productivity with Rust"}],["$","meta","10",{"property":"og:url","content":"https://omarabid.com/rust-high-level-language"}],["$","meta","11",{"property":"og:site_name","content":"Omar Abid - Personal Blog"}],["$","meta","12",{"property":"og:locale","content":"en_US"}],["$","meta","13",{"property":"og:type","content":"article"}],["$","meta","14",{"property":"article:published_time","content":"2020-11-10T00:00:00.000Z"}],["$","meta","15",{"property":"article:modified_time","content":"2020-11-10T00:00:00.000Z"}],["$","meta","16",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","17",{"name":"twitter:title","content":"Rust as a productive high-level language"}],["$","meta","18",{"name":"twitter:description","content":"High-level productivity with Rust"}],["$","meta","19",{"name":"next-size-adjust"}]]
f:I[1514,["326","static/chunks/326-f0b929b9e51900a5.js","202","static/chunks/app/(blog)/%5B...slug%5D/page-47a78e5a6d2fc851.js"],""]
10:I[2529,["326","static/chunks/326-f0b929b9e51900a5.js","202","static/chunks/app/(blog)/%5B...slug%5D/page-47a78e5a6d2fc851.js"],""]
11:I[6598,["326","static/chunks/326-f0b929b9e51900a5.js","202","static/chunks/app/(blog)/%5B...slug%5D/page-47a78e5a6d2fc851.js"],""]
e:[["$","script",null,{"type":"application/ld+json","dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"Rust as a productive high-level language\",\"datePublished\":\"2020-11-10T00:00:00.000Z\",\"dateModified\":\"2020-11-10T00:00:00.000Z\",\"description\":\"High-level productivity with Rust\",\"url\":\"https://omarabid.com/rust-high-level-language\",\"author\":[{\"@type\":\"Person\"}]}"}}],["$","section",null,{"className":"mx-auto max-w-3xl px-4 sm:px-6 xl:max-w-5xl xl:px-0","children":[["$","$Lf",null,{}],["$","div",null,{"className":"xl:divide-y xl:divide-gray-200 xl:dark:divide-gray-700","children":[["$","header",null,{"className":"pt-6 xl:pb-6","children":[["$","h1",null,{"className":"text-2xl font-bold mb-1 dark:text-gray-100","children":"Rust as a productive high-level language"}],["$","p",null,{"className":"font-mono flex text-xs text-gray-500 dark:text-gray-500","children":[["$","span",null,{"className":"flex-grow","children":[["$","span",null,{"className":"hidden md:inline","children":[["$","span",null,{"children":["$","a",null,{"href":"https://github.com/omarabid","className":"hover:text-gray-800 dark:hover:text-gray-400","target":"_blank","children":"@omarabid"}]}],["$","span",null,{"className":"mx-2","children":"|"}]]}],["$","span",null,{"children":["$","time",null,{"dateTime":"2020-11-10T00:00:00.000Z","children":"Tuesday, November 10, 2020"}]}]]}],["$","span",null,{"className":"pr-1.5"}]]}]]}],["$","article",null,{"className":"text-gray-800 dark:text-gray-300 mb-10","children":["$","div",null,{"className":"prose max-w-none pb-8 pt-10 dark:prose-invert","children":[[["$","p",null,{"children":["Rust is often critiqued as a ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://news.ycombinator.com/item?id=24536645","children":"not a very productive"}]," programming language. It is true that there is a bit of a learning curve to be able to program in Rust; but beyond that, I think it pays off in productivity; and massively I must say."]}],["$","p",null,{"children":"I haven't been using Rust for production much; maybe a bit more than a year. The static type checks means I'm getting much less bugs in my code, and spend considerably less time in debugging. I can safely say that, for me, Rust is more productive than JavaScript, PHP or Python and the margin keeps getting larger as I get more acquainted with the ecosystem."}],["$","hr",null,{}],["$","p",null,{"children":["To entice your interest, here is a situation that I handled lately: I have a program that writes logs to ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://en.wikipedia.org/wiki/Syslog","children":"syslog"}]," and the terminal. The program compiles and functions correctly on my development machine. However, it returned an error when I deployed it to an ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://alpinelinux.org/","children":"Alpine"}]," Docker container. Turns out, Alpine doesn't have a running syslog service by default."]}],["$","p",null,{"children":["Now that's fine, the program functioned correctly. But I don't care much for syslog on deployment since the program is running inside a container. One solution is to remove the syslog ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://en.wikipedia.org/wiki/Sink_(computing)","children":"drain"}]," but I need that for development. I can use ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://doc.rust-lang.org/reference/conditional-compilation.html","children":"conditional compilation"}],"; but there is a better option: If syslog fails, for whatever reason, just ignore that and move on."]}],["$","p",null,{"children":"So let's take a look at the old code."}],["$","$L10",null,{"className":"language-rust","children":["$","code",null,{"className":"language-rust code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"let"}]," syslog_drain ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"syslog_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"let"}]," term_drain ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"term_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}]]}]}],["$","p",null,{"children":["This code creates two logging drains: one for syslog and one for the terminal. It uses the ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://doc.rust-lang.org/edition-guide/rust-2018/error-handling-and-panics/the-question-mark-operator-for-easier-error-handling.html","children":"? operator"}]," to evaluate the result. If the function returns an error, execution will stop and the error bubbles back to the top of the program."]}],["$","p",null,{"children":["I have no idea how the syslog or any particular drain fails. And honestly, I don't want to get into these details. What I want is to check if there is a failure; and if so ignore that particular drain. Or return a ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://docs.rs/slog/2.5.2/slog/struct.Discard.html","children":"Discard drain"}],"."]}],["$","p",null,{"children":["The ",["$","a",null,{"target":"_blank","rel":"noopener noreferrer","href":"https://doc.rust-lang.org/std/result/","children":"Result"}]," type and ",["$","code",null,{"children":"? operator"}]," make this particularly easy. So here is the code that does that."]}],["$","$L10",null,{"className":"language-rust","children":["$","code",null,{"className":"language-rust code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"let"}]," syslog_drain ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"syslog_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"unwrap_or"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"discard_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"let"}]," term_drain ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token function","children":"term_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"unwrap_or"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token function","children":"discard_drain"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}]]}]}],["$","p",null,{"children":"And that's it. This code now compiles and runs correctly. If syslog is running, it'll write logs to syslog and the terminal. Otherwise, it'll write logs to the terminal and syslog is skipped. There are no conditions, no complicated checks and it's perfectly readable."}],["$","hr",null,{}],["$","p",null,{"children":"There is more to Rust productivity than that. Macros, Iterators, Advanced Traits and Types, the new Async system. Once you are comfortable with all of these, you are now able to be productive, safe and fast."}]],["$","$L11",null,{}]]}]}]]}]]}]]
d:null
